/*---------------------------------------------------------------------------*\
  =========                 |
  \\      /  F ield         | foam-extend: Open Source CFD
   \\    /   O peration     | Version:     4.0
    \\  /    A nd           | Web:         http://www.foam-extend.org
     \\/     M anipulation  | For copyright notice see file Copyright
-------------------------------------------------------------------------------
License
	This file is part of foam-extend.

	foam-extend is free software: you can redistribute it and/or modify it
	under the terms of the GNU General Public License as published by the
	Free Software Foundation, either version 3 of the License, or (at your
	option) any later version.

	foam-extend is distributed in the hope that it will be useful, but
	WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
	General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with foam-extend.  If not, see <http://www.gnu.org/licenses/>.

Class
	Foam::DispersionModel

Description

\*---------------------------------------------------------------------------*/

#ifndef DispersionModel_H
#define DispersionModel_H

#include "IOdictionary.H"
#include "autoPtr.H"
#include "runTimeSelectionTables.H"

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

namespace Foam
{


template<class CloudType>
class DispersionModel
{

	// Private data

		//- Cloud dictionary
		const dictionary& dict_;

		//- Reference to the owner cloud class
		CloudType& owner_;


public:

	//- Runtime type information
	TypeName("DispersionModel");


	// Declare runtime constructor selection table

	declareRunTimeSelectionTable
	(
		autoPtr,
		DispersionModel,
		dictionary,
		(
			const dictionary& dict,
			CloudType& owner
		),
		(dict, owner)
	);


	// Constructors

		//- Construct null from owner
		DispersionModel(CloudType& owner);

		//- Construct from components
		DispersionModel
		(
			const dictionary& dict,
			CloudType& owner
		);


	//- Destructor
	virtual ~DispersionModel();


	//- Selector
	static autoPtr<DispersionModel<CloudType> > New
	(
		const dictionary& dict,
		CloudType& owner
	);


	// Access

		//- Return the owner cloud object
		const CloudType& owner() const;

		//- Return the owner cloud object
		CloudType& owner();

		//- Return the dictionary
		const dictionary& dict() const;


	// Member Functions

		//- Flag to indicate whether model activates injection model
		virtual bool active() const = 0;

		//- Cache carrier fields
		virtual void cacheFields(const bool store) = 0;

		//- Update (disperse particles)
		virtual vector update
		(
			const scalar dt,
			const label celli,
			const vector& U,
			const vector& Uc,
			vector& UTurb,
			scalar& tTurb
		) = 0;
};


// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

} // End namespace Foam

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#define makeDispersionModel(CloudType)										\
																			  \
	defineNamedTemplateTypeNameAndDebug(DispersionModel<CloudType>, 0);	   \
																			  \
	defineTemplateRunTimeSelectionTable									   \
	(																		 \
		DispersionModel<CloudType>,										   \
		dictionary															\
	);


#define makeDispersionModelType(SS, CloudType, ParcelType)					\
																			  \
	defineNamedTemplateTypeNameAndDebug(SS<CloudType<ParcelType> >, 0);	   \
																			  \
	DispersionModel<CloudType<ParcelType> >::								 \
		adddictionaryConstructorToTable<SS<CloudType<ParcelType> > >		  \
			add##SS##CloudType##ParcelType##ConstructorToTable_;


#define makeDispersionModelThermoType(SS, CloudType, ParcelType, ThermoType)  \
																			  \
	defineNamedTemplateTypeNameAndDebug									   \
	(																		 \
		SS<CloudType<ParcelType<ThermoType> > >,							  \
		0																	 \
	);																		\
																			  \
	DispersionModel<CloudType<ParcelType<ThermoType> > >::					\
		adddictionaryConstructorToTable									   \
			<SS<CloudType<ParcelType<ThermoType> > > >						\
			add##SS##CloudType##ParcelType##ThermoType##ConstructorToTable_;


// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#ifdef NoRepository
#	include "DispersionModel.C"
#endif

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#endif

// ************************************************************************* //
