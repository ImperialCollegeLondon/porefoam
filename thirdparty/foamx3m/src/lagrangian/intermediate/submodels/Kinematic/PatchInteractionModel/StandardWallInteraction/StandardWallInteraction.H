/*---------------------------------------------------------------------------*\
  =========                 |
  \\      /  F ield         | foam-extend: Open Source CFD
   \\    /   O peration     | Version:     4.0
    \\  /    A nd           | Web:         http://www.foam-extend.org
     \\/     M anipulation  | For copyright notice see file Copyright
-------------------------------------------------------------------------------
License
	This file is part of foam-extend.

	foam-extend is free software: you can redistribute it and/or modify it
	under the terms of the GNU General Public License as published by the
	Free Software Foundation, either version 3 of the License, or (at your
	option) any later version.

	foam-extend is distributed in the hope that it will be useful, but
	WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
	General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with foam-extend.  If not, see <http://www.gnu.org/licenses/>.

Class
	Foam::StandardWallInteraction

Description
	Wall interaction model. Three choices:
	- rebound - optionally specify elasticity and resitution coefficients
	- stick   - particles assigined zero velocity
	- escape  - remove particle from the domain

	Example usage:

		StandardWallInteractionCoeffs
		{
			type		rebound; // stick, escape
			e		   1;	   // optional - elasticity coeff
			mu		  0;	   // optional - restitution coeff
		}

\*---------------------------------------------------------------------------*/

#ifndef StandardWallInteraction_H
#define StandardWallInteraction_H

#include "PatchInteractionModel.H"

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

namespace Foam
{

template<class CloudType>
class StandardWallInteraction
:
	public PatchInteractionModel<CloudType>
{
protected:

	// Protected data

		//- Interaction type
		typename PatchInteractionModel<CloudType>::interactionType
			interactionType_;

		//- Elasticity coefficient
		scalar e_;

		//- Restitution coefficient
		scalar mu_;


public:

	//- Runtime type information
	TypeName("StandardWallInteraction");


	// Constructors

		//- Construct from dictionary
		StandardWallInteraction(const dictionary& dict, CloudType& cloud);


	//- Destructor
	virtual ~StandardWallInteraction();


	// Member Functions

		//- Flag to indicate whether model activates patch interaction model
		virtual bool active() const;

		//- Apply velocity correction
		//  Returns true if particle remains in same cell
		virtual bool correct
		(
			const polyPatch& pp,
			const label faceId,
			bool& keepParticle,
			vector& U
		) const;
};


// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

} // End namespace Foam

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#ifdef NoRepository
#	include "StandardWallInteraction.C"
#endif

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#endif

// ************************************************************************* //
