/*---------------------------------------------------------------------------*\
  =========                 |
  \\      /  F ield         | foam-extend: Open Source CFD
   \\    /   O peration     | Version:     4.1
    \\  /    A nd           | Web:         http://www.foam-extend.org
     \\/     M anipulation  | For copyright notice see file Copyright
-------------------------------------------------------------------------------
License
	This file is part of foam-extend.

	foam-extend is free software: you can redistribute it and/or modify it
	under the terms of the GNU General Public License as published by the
	Free Software Foundation, either version 3 of the License, or (at your
	option) any later version.

	foam-extend is distributed in the hope that it will be useful, but
	WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
	General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with foam-extend.  If not, see <http://www.gnu.org/licenses/>.

Class
	axisCoordinateRotation

Description
	The 3 rotations are defined in the axis convention
	(around X, around Y and around Z).
	For reference and illustration, see
	http://mathworld.wolfram.com/RotationMatrix.html

AUTHOR
	Hrvoje Jasak, Wikki Ltd.  All rights reserved

\*---------------------------------------------------------------------------*/

#ifndef axisCoordinateRotation_H
#define axisCoordinateRotation_H

#include "coordinateRotation.H"

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

namespace Foam
{


class axisCoordinateRotation
:
	public coordinateRotation
{
	// Private member functions

		//- Calculate transformation tensor
		void calcTransform
		(
			const scalar phiAngle,
			const scalar thetaAngle,
			const scalar psiAngle,
			const bool inDegrees = true
		);


public:

	//- Runtime type information
	TypeName("axisRotation");


	// Constructors

		//- Construct null
		axisCoordinateRotation();

		//- Construct from components of rotation vector
		axisCoordinateRotation
		(
			const scalar phiAngle,
			const scalar thetaAngle,
			const scalar psiAngle,
			const bool inDegrees = true
		);

		//- Construct from dictionary
		axisCoordinateRotation(const dictionary&);
};


// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

} // End namespace Foam

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#endif

// ************************************************************************* //
