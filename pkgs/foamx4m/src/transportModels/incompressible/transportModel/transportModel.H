/*---------------------------------------------------------------------------*\
  =========                 |
  \\      /  F ield         | foam-extend: Open Source CFD
   \\    /   O peration     | Version:     4.1
    \\  /    A nd           | Web:         http://www.foam-extend.org
     \\/     M anipulation  | For copyright notice see file Copyright
-------------------------------------------------------------------------------
License
	This file is part of foam-extend.

	foam-extend is free software: you can redistribute it and/or modify it
	under the terms of the GNU General Public License as published by the
	Free Software Foundation, either version 3 of the License, or (at your
	option) any later version.

	foam-extend is distributed in the hope that it will be useful, but
	WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
	General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with foam-extend.  If not, see <http://www.gnu.org/licenses/>.

Class
	Foam::transportModel

Description
	Base-class for all transport models used by the incompressible turbulence
	models.

SourceFiles
	transportModel.C

\*---------------------------------------------------------------------------*/

#ifndef transportModel_H
#define transportModel_H

#include "IOdictionary.H"
#include "volFieldsFwd.H"
#include "surfaceFieldsFwd.H"

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

namespace Foam
{


class transportModel
:
	public IOdictionary
{
	// Private Member Functions

		//- Disallow copy construct
		transportModel(const transportModel&);

		//- Disallow default bitwise assignment
		void operator=(const transportModel&);


public:

	// Constructors

		//- Construct from components
		transportModel
		(
			const volVectorField& U,
			const surfaceScalarField& phi
		);


	// Destructor

		virtual ~transportModel();


	// Member Functions

		//- Return the laminar viscosity
		virtual const volScalarField& nu() const = 0;

		//- Correct the laminar viscosity
		virtual void correct() = 0;

		//- Read transportProperties dictionary
		virtual bool read() = 0;
};


// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

} // End namespace Foam

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#endif

// ************************************************************************* //
