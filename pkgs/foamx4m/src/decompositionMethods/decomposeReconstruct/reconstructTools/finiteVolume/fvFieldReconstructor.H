/*---------------------------------------------------------------------------*\
  =========                 |
  \\      /  F ield         | foam-extend: Open Source CFD
   \\    /   O peration     | Version:     4.1
    \\  /    A nd           | Web:         http://www.foam-extend.org
     \\/     M anipulation  | For copyright notice see file Copyright
-------------------------------------------------------------------------------
License
    This file is part of foam-extend.

    foam-extend is free software: you can redistribute it and/or modify it
    under the terms of the GNU General Public License as published by the
    Free Software Foundation, either version 3 of the License, or (at your
    option) any later version.

    foam-extend is distributed in the hope that it will be useful, but
    WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with foam-extend.  If not, see <http://www.gnu.org/licenses/>.

Class
    Foam::fvFieldReconstructor

Description
    FV volume and surface field reconstructor.

SourceFiles
    fvFieldReconstructor.C
    fvFieldReconstructorReconstructFields.C

\*---------------------------------------------------------------------------*/

#ifndef fvFieldReconstructor_H
#define fvFieldReconstructor_H

#include "PtrList.H"
#include "fvMesh.H"
#include "IOobjectList.H"
#include "fvPatchFieldMapper.H"
#include "labelIOList.H"

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

namespace Foam
{


/*---------------------------------------------------------------------------*\
                    Class fvFieldReconstructor Declaration
\*---------------------------------------------------------------------------*/

class fvFieldReconstructor
{
    // Private data

        //- Reconstructed mesh reference
        fvMesh& mesh_;

        //- List of processor meshes
        const PtrList<fvMesh>& procMeshes_;

        //- List of processor face addressing lists
        const PtrList<labelIOList>& faceProcAddressing_;

        //- List of processor cell addressing lists
        const PtrList<labelIOList>& cellProcAddressing_;

        //- List of processor boundary addressing lists
        const PtrList<labelIOList>& boundaryProcAddressing_;


    // Private Member Functions

        //- Disallow default bitwise copy construct
        fvFieldReconstructor(const fvFieldReconstructor&);

        //- Disallow default bitwise assignment
        void operator=(const fvFieldReconstructor&);


public:

        class fvPatchFieldReconstructor
        :
            public fvPatchFieldMapper
        {
            label size_;
            label sizeBeforeMapping_;

        public:

            // Constructors

                //- Construct given size
                fvPatchFieldReconstructor
                (
                    const label size,
                    const label sizeBeforeMapping
                )
                :
                    size_(size),
                    sizeBeforeMapping_(sizeBeforeMapping)
                {}


            //- Destructor
            virtual ~fvPatchFieldReconstructor()
            {}


            // Member functions

                virtual label size() const
                {
                    return size_;
                }

                virtual label sizeBeforeMapping() const
                {
                    return sizeBeforeMapping_;
                }

                virtual bool direct() const
                {
                    return true;
                }

                virtual const unallocLabelList& directAddressing() const
                {
                    return unallocLabelList::null();
                }
        };


    // Constructors

        //- Construct from components
        fvFieldReconstructor
        (
            fvMesh& mesh,
            const PtrList<fvMesh>& procMeshes,
            const PtrList<labelIOList>& faceProcAddressing,
            const PtrList<labelIOList>& cellProcAddressing,
            const PtrList<labelIOList>& boundaryProcAddressing
        );


    // Destructor - default


    // Member Functions

        // Single field reconstruction

            //- Reconstruct volume field data into a given field
            //  If a PtrList slot is empty, it is skipped
            template<class Type>
            void reconstructField
            (
                GeometricField<Type, fvPatchField, volMesh>& reconField,
                const PtrList<GeometricField<Type, fvPatchField, volMesh> >&
                    procFields
            ) const;

            //- Reconstruct volume field data into a given field
            //  If a PtrList slot is empty, it is skipped
            template<class Type>
            void reconstructField
            (
                GeometricField<Type, fvsPatchField, surfaceMesh>& reconField,
                const PtrList<GeometricField<Type, fvsPatchField, surfaceMesh> >&
                    procFields
            ) const;


        // Reconstruct and return a single field

            //- Reconstruct volume field
            template<class Type>
            tmp<GeometricField<Type, fvPatchField, volMesh> >
            reconstructFvVolumeField
            (
                const IOobject& fieldIoObject
            ) const;

            //- Reconstruct surface field
            template<class Type>
            tmp<GeometricField<Type, fvsPatchField, surfaceMesh> >
            reconstructFvSurfaceField
            (
                const IOobject& fieldIoObject
            ) const;


        // Reconstruct and write all/selected fields

            //- Reconstruct and write all/selected volume fields
            template<class Type>
            void reconstructFvVolumeFields
            (
                const IOobjectList& objects,
                const HashSet<word>& selectedFields
            ) const;

            //- Reconstruct and write all/selected volume fields
            template<class Type>
            void reconstructFvSurfaceFields
            (
                const IOobjectList& objects,
                const HashSet<word>& selectedFields
            ) const;
};


// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

} // End namespace Foam

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#ifdef NoRepository
#   include "fvFieldReconstructorReconstructFields.C"
#endif

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#endif

// ************************************************************************* //
