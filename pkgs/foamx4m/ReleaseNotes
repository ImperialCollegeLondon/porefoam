#                            -*- mode: org; -*-
#
#+TITLE:             *Release notes for foam-extend-4.0*
#+AUTHOR:                foam-extend administrators:
#+AUTHOR:                        Hrvoje Jasak
#+AUTHOR:                       Håkan Nilsson
#+AUTHOR:                       Henrik Rusche
#+AUTHOR:                      Martin Beaudoin
#+AUTHOR:                     Bernhard Gschaider
#+DATE:                          December 2016
#+LINK:                     http://foam-extend.org
#+OPTIONS: author:nil
#+OPTIONS: toc:2
#+OPTIONS: _:nil
#+OPTIONS: ^:nil

###############################################################################

** Overview
  The foam-extend project is a fork of the OpenFOAM® open source
  library for Computational Fluid Dynamics (CFD). It is an open
  project welcoming and integrating contributions from all users and
  developers. Previously known as OpenFOAM-dev and OpenFOAM-extend,
  it contains bug fixes and performance improvements, as well as
  extensions and additional features provided by community
  contributors (see file ListOfContributors), such as dynamic mesh and
  topological change support, turbomachinery extensions including
  general grid interpolation (GGI), cyclic GGI and mixing plane,
  block-coupled matrix support, implicitly coupled conjugate heat
  transfer and other physics coupling, finite area method,
  comprehensive dynamic mesh (motion and topological changes)
  capability and GPU support. For a full list, see below and previous
  release notes at:
  http://sourceforge.net/p/foam-extend/wiki/Home/

  Version 4.0, nicknamed "Guimaraes", is the current version of
  foam-extend. The release continues the tradition and spirit of the
  original FOAM code developed by prof. Jasak and Mr. Weller during
  their time at Imperial College and released as the general purpose
  CFD/CCM package by Nabla Ltd. in 2000. In this spirit, we reverted
  18 December 2013 to the original numbering scheme (foam-2.3.2, 13
  December 2004) as release number 3.0.  Visit http://foam-extend.org
  for more information.

  OPENFOAM is a registered trademark of ESI Group. OpenFOAM-extend and
  foam-extend are a community effort not endorsed by ESI Group.


** Installation
   foam-extend-4.0 can be compiled and runs on a large variety of Linux, Mac or Windows
   systems

  * Main supported OSs:
    - Ubuntu 16.04 LTS
    - Ubuntu 14.04 LTS
    - Fedora 24
    - Mac OS X
    - Microsoft Windows 7, 8.1 and 10

  * Compile from source:

    Please refer to doc/buildInstructions/ for details. Further
    installation instruction are available on the unofficial OpenFOAM
    Wiki:
    http://openfoamwiki.net/index.php/Installation/Linux/foam-extend-4.0
    If you have improvements or build instructions for a new system,
    please share them with the community (see section "How to
    contribute", below).

  * Download binary packages:

    Binary packages are available for download at
    http://sourceforge.net/projects/foam-extend/ for the following
    systems: Ubuntu 16.04, Fedora 24 and Mac OS X and Windows 10.

  * Accompanying ThirdParty software:
    - gcc compatibility up to 4.9.2
    - bison 2.7
    - cmake 3.2.2
    - flex-2.5.35
    - hwloc 1.10.1
    - libccmio 2.6.1
    - mesquite 2.1.2
    - metis 5.1.0
    - openmpi 1.8.8
    - Paraview 4.4.0
    - parmetis 4.0.3
    - ParMGridGen 1.0
    - PyFoam 0.6.4
    - qt 4.8.6
    - scotch 6.0.4
    - swak4Foam 0.4.0


** Compatibility
  Upstream features from the OpenFOAM® code base are merged into
  foam-extend on regular basis. The interface format of
  foam-extend-4.0 is largely compatible to foam-extend-3.2, to
  OpenFOAM-1.6-ext and OpenFOAM-1.7.x. In some cases, the
  differences are caused by bug fixes and algorithmic improvements,
  considered more important than inter-operability.

** Main differentiators between foam-extend and OpenFOAM
  A large number of features have been lost within the release of
  OpenFOAM since version 1.3, the code base has shrunk by more than
  40%.  While we understand the lack of technical ability of
  supporting advanced CFD features, we feel that existing features and
  specifically large-scale contributions should remain active and
  developed further. Below is a list of main features of foam-extend
  which are lacking, lost, deactivated or unusable in ESI releases:

  * Turbomachinery features, including General Grid Interface (GGI),
    partial overlap GGI, cyclic GGI, with improvements in parallel
    scaling.  First release of a mixing plane stage interface

  * Dynamic mesh with topological changes Sliding interfaces, mesh
    layering, attach-detach boundaries etc.  In foam-extend, full
    parallel support for topological changes is released for the first
    time

  * Finite Element Method with support for polyhedral meshes This is
    mainly used in mesh deformation and over the last 15 years it has
    proven vastly superior to all other dynamic mesh methods.

  * Advanced mesh deformation technology Including tet FEM mesh
    deformation, Radial Basis Function (RBF) mesh deformation,
    tetrahedral remeshing dynamic mesh support and solid body motion
    functions.  All of the above include parallelisation support

  * Library of dynamic meshes with topological changes with full
    second order FVM discretisation support on moving meshes with
    topological changes

  * Internal combustion engine-specific dynamic mesh classes such as
    two-stroke engine and various forms of 4-stroke and multi-valve
    dynamic mesh classes

  * Finite Area Method providing support for FVM-like discretisation
    on a curved surface in 3-D, with examples of liquid film modeling

  * Block-coupled matrix support, allowing fully implicit
    multi-equation solution of NxN equation sets, with full
    parallelisation support.  First release of a block-AMG linear
    equation solver

  * Fully implicit conjugate-coupled solution framework, allowing
    implicit solution fo multiple equations over multiple meshes, with
    parallelism

  * Proper Orthogonal Decomposition data analysis tools, with
    applications to FOAM field classes

  * Equation reader classes and tutorials

  * Multi-solver solution framework, allowing multiple field models to
    be solved in a coupled manner

  * A major contribution is solid mechanics modelling, including
    linear and non-linear materials, contact, self-contact and
    friction, with updated Lagrangian or absolute Lagrangian
    formulation.  Solution of damage models and crack propagation in
    complex materials via topological changes

  * CUDA solver release, provided in full source and as an example of
    coupling external linear equation solvers with FOAM

  * Library-level support for Immersed Boundary Method and Overset
    Mesh

  * Major improvements in accuracy and stability of FVM discretisation
    with options on convection and diffusion discretisation, deferred
    correction or explicit schemes

  * Algebraic multigrid solver framework

  * 253 tutorials with automated run scripts

  * Automatic test harness

  * Approximately 6000 bug fixes in fundamental level libraries and
    discretisation techniques

** New features in foam-extend-4.0, since foam-extend-3.2
  The list of features is a result of the work of numerous
  contributors. The maintainers of foam-extend would formally like to
  thank them all.

  Get a full log of the updates by (either):
#+BEGIN_SRC bash
    user@machine> git log 4.0.. > commitLog
#+END_SRC
#+BEGIN_SRC bash
    user@machine> git log 4.0.. --oneline > commitLog
#+END_SRC
#+BEGIN_SRC bash
    user@machine> gitg 4.0..
#+END_SRC

  * Major new features:
    - Improved BlockLduMatrix and block-coupled p-U solver and associated tools
    - ILUCp and block ILUCp preconditioners
    - Added MRF and porous media handling to the block-coupled solver
    - Change of generic turbulence modelling interface: no U required
    - Updated version of block-coupled turbulence models
    - Major improvements in immersed boundary method library: improved performance
      and parallel scaling.  Completed supporft for moving deforming immersed boundary
    - Adopted vanilla OpenFOAM solver control format (solutionControl class)
    - Implicit adjoint convection operator
    - Improved GGI interpolation and cutting, with better parallel scaling
    - Global GGI search option for parallel cases
    - GGI and mixing planes with jump condition for the rothalpy equation
    - Improved 6-DOF solver, with new handling of constraints
    - Fully integrated real gas library
    - Updated viscoelastoplastic models
    - New steady-state universal flow solver, handling incompressible and compressible
      flows within the same framework
    - Time consistent incompressible solvers update
    - Added decaying turbulence inlet boundary condition by Kornev
    - New gradient limiter implementation
    - Full gradient cacheing capability
    - Removed fluxRequired from solution dictionaries
    - Consistent notation of 1/aP
    - Dynamic mesh improvements: prescribed motion functions

  * Software
    - New handling of lnInclude directories: avoid file copying on MS Windows
    - Changes to controlDict and options on MS Windows
    - Consistency in formatting of compression options
    - Raspberry Pi port

  * Installation:
    - Compilation improvements
    - Updated packages versions and compilation in ThirdParty
    - Changed compilation options for Infiniband: new versions of MPI
    - Added support for mvapich2-2.2
    - Updated compilation for latest version of XCode for Mac OSX
    - Updates for MS Windows build

  * Solvers:
    - Updated time consistent incompressible solvers (channelFoam, icoFoam, nonNewtonianIcoFoam, pimpleDyMFoam, pimpleFoam, simpleFoam, simpleSRFFoam)
    - Steady universal (compressible and incompressible) flow solver (steadyUniversalFoam)
    - Block-coupled p-U solver improvements (MRFPorousFoam and pUCoupledFoam)
    - Improved steadyCompressibleMRFFoam

  * New tutorials:
    - Transient real fluid examples
    - Universal steady-state MRF examples
    - Additional coupled CHT example
    - Additional immersed boundary example
    - Additional steady-state MRF and GGI example

  * Bug fixes: see git log for details

** Recent successful compilations and tests
   * Ubuntu 16.04 LTS

** Reporting bugs
    To report bugs, please use the bugtracker at
    http://sourceforge.net/p/foam-extend/tickets/

** How to contribute
    All your contributions are highly welcome: New solvers, utilities and
    models; bug fixes; documentation. The many ways of contributing and the
    contribution process are described in detail at:
    http://sourceforge.net/p/foam-extend/wiki/HowToContribute/

** List of Contributors:
    See file ListOfContributors
