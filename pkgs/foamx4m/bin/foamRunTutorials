#!/bin/sh
#------------------------------------------------------------------------------
# =========                 |
# \\      /  F ield         | foam-extend: Open Source CFD
#  \\    /   O peration     | Version:     4.1
#   \\  /    A nd           | Web:         http://www.foam-extend.org
#    \\/     M anipulation  | For copyright notice see file Copyright
#------------------------------------------------------------------------------
# License
#     This file is part of foam-extend.
#
#     foam-extend is free software: you can redistribute it and/or modify it
#     under the terms of the GNU General Public License as published by the
#     Free Software Foundation, either version 3 of the License, or (at your
#     option) any later version.
#
#     foam-extend is distributed in the hope that it will be useful, but
#     WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#     General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with foam-extend.  If not, see <http://www.gnu.org/licenses/>.
#
# Script
#     foamRunTutorials
#
# Description
#       Run either Allrun or blockMesh/application in current directory
#       and all its subdirectories.
#
#------------------------------------------------------------------------------

# Source tutorial functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

thisScript=$0
if [ "/${thisScript#/}" != "$thisScript" ]
then
    thisScript="$PWD/$thisScript"
fi

# If an argument is supplied do not execute ./Allrun to avoid recursion
if [ $# = 0 -a -f "./Allrun" ]
then
    # Specialised script.
    ./Allrun
elif [ -d "./system" ]
then
    # Normal case.
    parentDir=`dirname $PWD`
    application=`getApplication`
    runApplication blockMesh
    runApplication $application
else
    # Loop over sub-directories and compile any applications
    for case in *
    do
        if [ -d $case -a -d "$case/Make" ]
        then
            (compileApplication $case)
        fi
    done
    # Recurse to subdirectories
    for case in *
    do
        if [ -d $case ]
        then
            (cd $case && $thisScript)
        fi
    done
fi

#------------------------------------------------------------------------------
