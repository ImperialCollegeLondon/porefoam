#!/bin/bash




SetedmsSrc="$msSrc"

myCurDIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
echo Running ${BASH_SOURCE[0]} on $myCurDIR  \{
if ! [ -n "$msSrc" ]; then
	printf "\n PoreScale paths are not set\n please set them by running:\nsource $myCurDIR/bashrc\n"
	printf " Add this to your ~/.bashrc file to keep the settings.\n Press Cntrl+C to stop \n";
	sleep 1
	source $myCurDIR/bashrc
fi



if [ -n "$1" ]; then
    cases=$1
else
	cases="$(ls -d */ | grep -v [\ ] | grep  -v [\)-]/ | sed 's/\///g')"
fi


# compile libraries first, libraries hsould have makefile instead of Makefile
for cas in $cases ; do
  if [ -f $cas/makefile ]; then 
    printf "\n* cd $cas && make:\n"
    (cd $cas && make -j)
  fi
done

for cas in $cases ; do
  if [ -f $cas/Makefile ]; then 
    printf "\n* cd $cas && make:\n"
    (cd $cas && make -j) 
  elif [ -f $cas/makefile ]; then echo
  elif [ -f $cas/CMakeLists.txt ]; then # TODO: switch to cmake, not working always 
    exec=`basename $cas`
    printf "\n* cmake -S$cas  -B$msBilDir/$exec:\n"
    mkdir -p $msBilDir/$exec  
    cmake -S$cas  -B$msBilDir/$exec  
    cmake --build $msBilDir/$exec -j
    cmake --install  $msBilDir/$exec
  else     printf "\n* skipping $cas\n"
  fi
done




echo "bin directory: $msBinDir"
if ! [ -n "$SetedmsSrc" ]; then
  printf "\n\nCompilation finished.  To install, add in your ~/.bashrc file:\n"
  printf "source $msSrc/script/bashrc\n\n"
fi
